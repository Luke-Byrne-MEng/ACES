<?xml version="1.0"?>
<launch>

  <!-- Robot -->
  <arg name="robot_name"/>
  <arg name="init_pose"/>
  
  <node name="spawn_model_$(arg robot_name)" pkg="gazebo_ros" type="spawn_model" args="$(arg init_pose) -urdf -param /robot_description -model $(arg robot_name)" respawn="false" output="screen" />
  
  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
    <param name="publish_frequency" type="double" value="50.0" />
    <param name="tf_prefix"         type="string" value="$(arg robot_name)" />
  </node>
  
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
    <param name="use_gui"            value="False"/>
    <param name="robot_description"  textfile= "$(find jet_description)/urdf/jet.xacro" />
  </node>
  
  <!-- ORB SLAM2 ROS Node -->
  <node name="orb_slam2_rgbd" pkg="orb_slam2_ros"     type="orb_slam2_ros_rgbd">
    <remap from="/camera/rgb/camera_info"             to="camera_ir/color/camera_info"/>
    <remap from="/camera/rgb/image_raw"               to="camera_ir/color/image_raw"/>  
    <remap from="/camera/depth_registered/image_raw"  to="camera_ir/depth/image_raw"/>
    <!-- Static parameters -->ro
    <param name="publish_pointcloud"  type="bool"   value="true" />
    <param name="publish_pose"        type="bool"   value="true" />
    <param name="publish_tf"          type="bool"   value="true" />
    <param name="pointcloud_frame_id" type="string" value="map" />
    <param name="camera_frame_id"     type="string" value="camera" />
    <param name="target_frame_id"     type="string" value="chassis" />
    <param name="map_file"            type="string" value="map.bin" />
    <param name="voc_file"            type="string" value="$(find orb_slam2_ros)/orb_slam2/Vocabulary/ORBvoc.txt" />
    <param name="load_map"            type="bool"   value="false" />
    <param name="localize_only"       type="bool"   value="false" />
    <param name="reset_map"           type="bool"   value="false" />
    <param name="min_num_kf_in_map"   type="int"    value="5" />
    <!-- Camera parameters -->
    <param name="camera_fps" type="int" value="30" />
    <!-- Color order of the images (0: BGR, 1: RGB. It is ignored if images are grayscale) -->
    <param name="camera_rgb_encoding" type="bool" value="true" />
    <!-- ORB parameters -->
    <param name="/ORBextractor/nFeatures"   type="int"    value="2000" />
    <param name="/ORBextractor/scaleFactor" type="double" value="1.2" />
    <param name="/ORBextractor/nLevels"     type="int"    value="8" />
    <param name="/ORBextractor/iniThFAST"   type="int"    value="20" />
    <param name="/ORBextractor/minThFAST"   type="int"    value="7" />
    <!-- Camera calibration parameters -->
    <!-- If the node should wait for a camera_info topic to take the camera calibration data-->
    <param name="load_calibration_from_cam" type="bool" value="true" />
  </node>

  <!-- Octomap Server Node -->
  <node name="octomap_server" pkg="octomap_server" type="octomap_server_node">
    <remap from="cloud_in" to="orb_slam2_rgbd/map_points" />
    <param name="frame_id"               type="string" value="map" />
    <param name="resolution"             type="double" value="0.01" />
    <param name="base_frame_id "         type="string" value="chassis" />
    <param name="height_map"             type="bool"   value="false" />
    <param name="sensor_model/max_range" type="double" value="2.0" />
    <param name="latch"                  type="bool"   value="false" />
    <param name="filter_ground"          type="bool"   value="false" />
    <param name="ground_filter/distance" type="double" value="0.05" />
    <param name="pointcloud_[min|max]_z" type="double" value="1" />
    <param name="occupancy_[min|max]_z " type="double" value="1" />
  </node>

  <!-- explore_lite Node -->
  <node pkg="explore_lite" type="explore" respawn="true" name="explore">
    <param name="robot_base_frame"      value="chassis"/>
    <param name="costmap_topic"         value="projected_map"/>
    <param name="costmap_updates_topic" value="projected_map_updates"/>
    <param name="visualize"             value="true"/>
    <param name="planner_frequency"     value="0.33"/>
    <param name="progress_timeout"      value="30.0"/>
    <param name="potential_scale"       value="3.0"/>
    <param name="orientation_scale"     value="0.0"/>
    <param name="gain_scale"            value="1.0"/>
    <param name="transform_tolerance"   value="0.3"/>
    <param name="min_frontier_size"     value="0.75"/>
  </node>
  
  <!-- Move Base Node -->
  <arg name="speed" />
  <node pkg="move_base" type="move_base" respawn="false" name="move_base">
    <remap from="odom" to="odometry/filtered" />
    <rosparam file="$(find jet_navigation)/config/costmap_common.yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find jet_navigation)/config/costmap_common.yaml" command="load" ns="local_costmap" />
    <rosparam file="$(find jet_navigation)/config/map_nav/local_costmap.yaml" command="load"/>
    <rosparam file="$(find jet_navigation)/config/map_nav/global_costmap.yaml" command="load" />
    <rosparam file="$(find jet_navigation)/config/base_local_planner.yaml" command="load" />
    <rosparam file="$(find jet_navigation)/config/move_base.yaml" command="load" />
    <param name="TrajectoryPlannerROS/max_vel_x"     value="$(arg speed)"/>
    <param name="TrajectoryPlannerROS/max_vel_theta" value="$(arg speed)"/>
    <param name="TrajectoryPlannerROS/min_vel_theta" value="$-(arg speed)"/>
    <param name="base_global_planner"                value="navfn/NavfnROS" />
    <param name="base_local_planner"                 value="base_local_planner/TrajectoryPlannerROS"/>
  </node>
  
</launch>
